apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-ingress
  namespace: nginx-ingress
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-ingress
  template:
    metadata:
      labels:
        app: nginx-ingress
        app.kubernetes.io/name: nginx-ingress
     #annotations:
       #prometheus.io/scrape: "true"
       #prometheus.io/port: "9113"
       #prometheus.io/scheme: http
    spec:
      serviceAccountName: nginx-ingress
      automountServiceAccountToken: true
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      volumes:
      - name: app-protect-config
        emptyDir: {}
      - name: app-protect-bd-config
        emptyDir: {}
      - name: app-protect-bundles
        persistentVolumeClaim:
          claimName: kic-nap5-bundles-pvc
      containers:
      - image: repositories.f5demos.com:8443/kic-nap5/nginx-plus-ingress:3.7.0
        imagePullPolicy: IfNotPresent
        name: nginx-plus-ingress
        volumeMounts:
          - name: app-protect-bd-config
            mountPath: /opt/app_protect/bd_config
          - name: app-protect-config
            mountPath: /opt/app_protect/config
          - name: app-protect-bundles
            mountPath: /etc/app_protect/bundles
        ports:
        - name: http
          containerPort: 80
        - name: https
          containerPort: 443
        - name: readiness-port
          containerPort: 8081
        - name: prometheus
          containerPort: 9113
        - name: service-insight
          containerPort: 9114
        readinessProbe:
          httpGet:
            path: /nginx-ready
            port: readiness-port
          periodSeconds: 1
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
         #limits:
         #  cpu: "1"
         #  memory: "1Gi"
        securityContext:
          allowPrivilegeEscalation: false
#          readOnlyRootFilesystem: true
          runAsUser: 101 #nginx
          runAsNonRoot: true
          capabilities:
            drop:
            - ALL
            add:
            - NET_BIND_SERVICE
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        args:
          - -nginx-plus
          - -nginx-configmaps=$(POD_NAMESPACE)/nginx-config
          - -report-ingress-status
          - -external-service=nginx-ingress
          - -default-server-tls-secret=$(POD_NAMESPACE)/default-server-secret
         #- -enable-cert-manager
         #- -enable-external-dns
          - -enable-app-protect
         #- -enable-app-protect-dos
         #- -v=3 # Enables extensive logging. Useful for troubleshooting.
         #- -enable-prometheus-metrics
         #- -enable-service-insight
         #- -global-configuration=$(POD_NAMESPACE)/nginx-configuration
      - name: waf-enforcer
        image: repositories.f5demos.com:8443/kic-nap5/waf-enforcer:5.3.0
        imagePullPolicy: IfNotPresent
        env:
          - name: ENFORCER_PORT
            value: "50000"
        volumeMounts:
          - name: app-protect-bd-config
            mountPath: /opt/app_protect/bd_config
      - name: waf-config-mgr
        image: repositories.f5demos.com:8443/kic-nap5/waf-config-mgr:5.3.0
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - all
        volumeMounts:
          - name: app-protect-bd-config
            mountPath: /opt/app_protect/bd_config
          - name: app-protect-config
            mountPath: /opt/app_protect/config
          - name: app-protect-bundles
            mountPath: /etc/app_protect/bundles
